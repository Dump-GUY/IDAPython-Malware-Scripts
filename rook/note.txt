rook_file_footer

struct ROOK_FILE_FOOTER
{
  LARGE_INTEGER file_size;
  BYTE metadata[2576];
};

struct ROOK_CRYPT_METADATA {
    _QWORD encrypted_chunk_count;
    _QWORD some_num_default_2;
    BYTE encrypted_AES_key_by_my_public[256];
    BYTE my_private_key_encrypted_by_Rook_public[0x900];
};

ROOK_CRYPT_METADATA
0: _QWORD encrypted_chunk_count;
8: _QWORD some_num_default_2;
16: BYTE encrypted_AES_key_by_my_public[256];
272: BYTE my_private_key_encrypted_by_Rook_public[0x900];



Rook has a hard-coded RSA public key.
REGKEY RookPublicKey -> MY_PUBLIC_KEY? + set MY_PUBLIC_KEY to REGKEY RookPublicKey

Gen my public & private key
Rook encrypt my private key using its public
Rook Encrypts data using the AES key and encrypts the AES key by my public key
To recover -> use Rook's private key to decrypt my private key and use my private key to decrypt the AES key 

