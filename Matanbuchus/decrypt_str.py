import idaapi
import idc
import idautils


def translate_ea(offset):
    for s in idautils.Segments():
        if idc.get_segm_name(s) == ".text":
            return offset + s

    print('translate_ea fails..')
    return None


def decrypt(start_ea, end_ea, a):
    encrypted_buffer = []

    if start_ea is None or end_ea is None:
        print('cant decrypt')
        return

    curr = start_ea

    while curr <= end_ea:
        encrypted_buffer.append(idc.get_operand_value(curr, 1))
        curr = idc.next_head(curr)

    for i in range(len(encrypted_buffer)):
        encrypted_buffer[i] ^= (a >> (8 * (i % 8))) & 0xFF

    return ''.join([chr(each) for each in encrypted_buffer])


print(decrypt(0x10004910, 0x100049F8, 0xDBAF4383C59F19CF))
