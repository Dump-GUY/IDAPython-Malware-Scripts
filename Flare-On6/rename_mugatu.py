import idaapi


def imp_cb(ea, name, ord):
    global API_struct, index

    API_struct[DLL_name].append([name, ea])

    index += 1
    return True


API_struct = {}  # DLL name : API array


nimps = idaapi.get_import_module_qty()

DLL_name = ''
index = 0

for i in range(0, nimps):
    DLL_name = idaapi.get_import_module_name(i)
    if not DLL_name:
        continue

    API_struct[DLL_name] = []
    index = 0
    idaapi.enum_import_names(i, imp_cb)


for dll_name in API_struct.keys():
    length = int((len(API_struct[dll_name]) - 1) / 2)

    if length < 0:
        length = 0

    if length != 0:
        for i in range(0, length):  # flip all except the middle two
            tempName = API_struct[dll_name][i][0]
            API_struct[dll_name][i][0] = API_struct[dll_name][len(
                API_struct[dll_name]) - i - 1][0]
            API_struct[dll_name][len(
                API_struct[dll_name]) - i - 1][0] = tempName


for dll_name in API_struct.keys():
    for each in API_struct[dll_name]:
        idaapi.set_name(each[1], 'mw_' + each[0])
