import idaapi
import idc
import idautils
import ida_bytes

string_buffer_begin_ea = 0x13F1D6008
import_list_begin_ea = 0x13F180038

import_string_list = []

def get_string(begin_ea):
    result = ''
    curr_ea = begin_ea
    while True:
        curr_byte = int.from_bytes(ida_bytes.get_bytes(curr_ea, 1), 'little')
        if curr_byte == 0:
            break
        result += chr(curr_byte)
        curr_ea = curr_ea + 1
    return result

curr_ea = string_buffer_begin_ea
for i in range(125):
    string_flag = int.from_bytes(ida_bytes.get_bytes(curr_ea, 1), 'little')
    curr_ea +=1
    if string_flag == 1:
        curr_str = get_string(curr_ea)
        idc.set_name(import_list_begin_ea + i*8, curr_str, idaapi.SN_FORCE)
        curr_ea += len(curr_str) + 1
    elif string_flag == 0:
        idc.set_name(import_list_begin_ea + i*8, 'addr_' + hex(int.from_bytes(ida_bytes.get_bytes(curr_ea + 1, 7)[2:], 'little')), idaapi.SN_FORCE)
        curr_ea += 8

for i in range(6):
    string_flag = int.from_bytes(ida_bytes.get_bytes(curr_ea, 1), 'little')
    curr_ea +=1
    if string_flag == 1:
        curr_str = get_string(curr_ea)
        idc.set_name(import_list_begin_ea - 0x38 + i*8, curr_str, idaapi.SN_FORCE)
        curr_ea += len(curr_str) + 1
    elif string_flag == 0:
        idc.set_name(import_list_begin_ea - 0x38 + i*8, 'addr_' + hex(int.from_bytes(ida_bytes.get_bytes(curr_ea + 1, 7)[2:], 'little')), idaapi.SN_FORCE)
        curr_ea += 8

for i in range(7):
    string_flag = int.from_bytes(ida_bytes.get_bytes(curr_ea, 1), 'little')
    curr_ea +=1
    if string_flag == 1:
        curr_str = get_string(curr_ea)
        idc.set_name(import_list_begin_ea + 124 * 8 + i*8, curr_str, idaapi.SN_FORCE)
        curr_ea += len(curr_str) + 1
    elif string_flag == 0:
        idc.set_name(import_list_begin_ea + 124 * 8 + i*8, 'addr_' + hex(int.from_bytes(ida_bytes.get_bytes(curr_ea + 1, 7)[2:], 'little')), idaapi.SN_FORCE)
        curr_ea += 8
